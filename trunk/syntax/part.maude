---(
load list
load set
load position
load angle
load skill
load interface
load mra
---)

mod PART-NAME is
  sort PartName .
---  op _+_ : PartName PartName -> PartName [assoc comm format (d r o d)] .
endm

mod MATERIAL is
  sort Material .
  ops plastic metal rubber wood : -> Material [ctor format (! o) ] .
endm

mod PART-ITEM is 
  including PART-TYPE .
  including PART-NAME .
  including MATERIAL .
  including MRA-TYPE .
  including MRA-SUBTYPE .
  including ANGLE .
  including POSITION .
  sort PartItem . 
---  sorts Gripper-Subtype .
---  Subtype is defined in MRA-TYPE...

  op <type>_</type> : PartType -> PartItem [format (ni o d o) ] .
---  op <subtype>_</subtype> : Subtype -> ModuleItem [format (ni o d o) ] .
---  op <interfaces>_</interfaces> : Set{Interface} -> ModuleItem [format (ni++ o -- o) ] .
---  op <skills>_</skills> : Set{Skill} -> ModuleItem [format (ni++ o -- o) ] .
  op <name>_</name> : PartName -> PartItem [format (ni++ o -- o) ] .
  op <material>_</material> : Material -> PartItem [format (ni++ o -- o) ] .
  op <weight>_</weight> : Int -> PartItem [format (ni++ o -- o) ] .
  op <x-dimension>_</x-dimension> : Int -> PartItem [format (ni++ o -- o) ] .
  op <y-dimension>_</y-dimension> : Int -> PartItem [format (ni++ o -- o) ] .
  op <z-dimension>_</z-dimension> : Int -> PartItem [format (ni++ o -- o) ] .
  op <gripper-subtype>_</gripper-subtype> : MraSubType -> PartItem [format (ni++ o -- o) ] .
  op <grip-pos1>_</grip-pos1> : Position -> PartItem [format (ni++ o -- o) ] .
  op <grip-pos2>_</grip-pos2> : Position -> PartItem [format (ni++ o -- o) ] .
  op <grip-pos3>_</grip-pos3> : Position -> PartItem [format (ni++ o -- o) ] .
  op <part-position>_</part-position> : Position -> PartItem [format (ni++ o -- o) ] .
  op <part-angle>_</part-angle> : Angle -> PartItem [format (ni++ o -- o) ] .

  op position : PartName -> Position .
  op angle : PartName -> Angle .

--- not sure this is the right place to define the following…? and how to do it correctly?
--- part-range = squarroot( (grip-pos2(x) - grip-pos1(x))^2 + (grip-pos2(y) - grip-pos1(y))^2 + (grip-pos2(z) - grip-pos1(z))^2 )
--- where x is the first argument of grip-pos, y the second, and z the third
--- then compare part-range to grange (2-finger gripper opening range)

endm
view PartItem from TRIV to PART-ITEM is sort Elt to PartItem . endv

mod PART is including SET{PartItem} .
  sort Part .
  op <part>_</part> : Set{PartItem} -> Part [format (ni++ o n--i o) ] . 
endm
view Part from TRIV to PART is sort Elt to Part . endv 


